services:
  wal_archive_init:
    image: postgres:15
    command: chown -R 999:999 /var/lib/postgresql/wal_archive
    user: root
    networks:
      - app_network
    volumes:
      - pg_wal_archive:/var/lib/postgresql/wal_archive

  master_db:
    image: postgres:15
    container_name: master_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres-conf/my_postgresql.conf:/etc/postgresql/my_postgresql.conf:ro
      - ./docker/postgres-conf/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      - pg_wal_archive:/var/lib/postgresql/wal_archive
    command: postgres -c config_file=/etc/postgresql/my_postgresql.conf
    networks:
      - app_network
    depends_on:
      - wal_archive_init
    healthcheck:
          test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
          interval: 10s
          timeout: 5s
          retries: 5

  db_replica:
    image: postgres:15
    container_name: db_replica
    environment:
      POSTGRES_USER: ${REPLICATOR_USER}
      POSTGRES_PASSWORD: ${REPLICATOR_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_replica_data:/var/lib/postgresql/data
      - ./docker/postgres-conf/my_postgresql.conf:/etc/postgresql/my_postgresql.conf:ro
      - ./docker/postgres-conf/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      - pg_wal_archive:/var/lib/postgresql/wal_archive
    command: postgres -c config_file=/etc/postgresql/my_postgresql.conf
    networks:
      - app_network
    depends_on:
      - master_db
      - wal_archive_init

  api:
    build: .
    image: servatorum_api
    container_name: servatorum_api
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./key.pem:/app/key.pem
      - ./cert.pem:/app/cert.pem
    networks:
      - app_network
    depends_on:
      - master_db

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  postgres_replica_data:
  pg_wal_archive: